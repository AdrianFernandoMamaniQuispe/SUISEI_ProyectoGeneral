//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SUISEI.MODELO
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SUISEIEntities : DbContext
    {
        public SUISEIEntities()
            : base("name=SUISEIEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Cliente> Cliente { get; set; }
        public virtual DbSet<Delivery> Delivery { get; set; }
        public virtual DbSet<DetalleOperacion> DetalleOperacion { get; set; }
        public virtual DbSet<DetalleRol> DetalleRol { get; set; }
        public virtual DbSet<DetalleVenta> DetalleVenta { get; set; }
        public virtual DbSet<Lote> Lote { get; set; }
        public virtual DbSet<Operacion> Operacion { get; set; }
        public virtual DbSet<Pedido> Pedido { get; set; }
        public virtual DbSet<Producto> Producto { get; set; }
        public virtual DbSet<Rol> Rol { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
        public virtual DbSet<Venta> Venta { get; set; }
    
        public virtual ObjectResult<OBTENER_CLIENTES_Result> OBTENER_CLIENTES(Nullable<int> iClienteId, string iNombre)
        {
            var iClienteIdParameter = iClienteId.HasValue ?
                new ObjectParameter("iClienteId", iClienteId) :
                new ObjectParameter("iClienteId", typeof(int));
    
            var iNombreParameter = iNombre != null ?
                new ObjectParameter("iNombre", iNombre) :
                new ObjectParameter("iNombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OBTENER_CLIENTES_Result>("OBTENER_CLIENTES", iClienteIdParameter, iNombreParameter);
        }
    
        public virtual ObjectResult<OBTENER_USUARIOS_Result> OBTENER_USUARIOS(Nullable<int> iUsuarioId, string iNombre)
        {
            var iUsuarioIdParameter = iUsuarioId.HasValue ?
                new ObjectParameter("iUsuarioId", iUsuarioId) :
                new ObjectParameter("iUsuarioId", typeof(int));
    
            var iNombreParameter = iNombre != null ?
                new ObjectParameter("iNombre", iNombre) :
                new ObjectParameter("iNombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OBTENER_USUARIOS_Result>("OBTENER_USUARIOS", iUsuarioIdParameter, iNombreParameter);
        }
    
        public virtual ObjectResult<string> OBTENER_CREDENCIALES(Nullable<int> iUsuarioId, string iNombreUsuario, string iClave)
        {
            var iUsuarioIdParameter = iUsuarioId.HasValue ?
                new ObjectParameter("iUsuarioId", iUsuarioId) :
                new ObjectParameter("iUsuarioId", typeof(int));
    
            var iNombreUsuarioParameter = iNombreUsuario != null ?
                new ObjectParameter("iNombreUsuario", iNombreUsuario) :
                new ObjectParameter("iNombreUsuario", typeof(string));
    
            var iClaveParameter = iClave != null ?
                new ObjectParameter("iClave", iClave) :
                new ObjectParameter("iClave", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("OBTENER_CREDENCIALES", iUsuarioIdParameter, iNombreUsuarioParameter, iClaveParameter);
        }
    }
}
